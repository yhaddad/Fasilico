//
// File generated by rootcint at Mon Oct  7 19:20:48 2013

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME JTupleDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "JTupleDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void JTuple_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_JTuple(void *p = 0);
   static void *newArray_JTuple(Long_t size, void *p);
   static void delete_JTuple(void *p);
   static void deleteArray_JTuple(void *p);
   static void destruct_JTuple(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::JTuple*)
   {
      ::JTuple *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::JTuple >(0);
      static ::ROOT::TGenericClassInfo 
         instance("JTuple", ::JTuple::Class_Version(), "./../include/JTuple.hh", 35,
                  typeid(::JTuple), DefineBehavior(ptr, ptr),
                  &::JTuple::Dictionary, isa_proxy, 4,
                  sizeof(::JTuple) );
      instance.SetNew(&new_JTuple);
      instance.SetNewArray(&newArray_JTuple);
      instance.SetDelete(&delete_JTuple);
      instance.SetDeleteArray(&deleteArray_JTuple);
      instance.SetDestructor(&destruct_JTuple);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::JTuple*)
   {
      return GenerateInitInstanceLocal((::JTuple*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::JTuple*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *JTuple::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *JTuple::Class_Name()
{
   return "JTuple";
}

//______________________________________________________________________________
const char *JTuple::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::JTuple*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int JTuple::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::JTuple*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void JTuple::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::JTuple*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *JTuple::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::JTuple*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void JTuple::Streamer(TBuffer &R__b)
{
   // Stream an object of class JTuple.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(JTuple::Class(),this);
   } else {
      R__b.WriteClassBuffer(JTuple::Class(),this);
   }
}

//______________________________________________________________________________
void JTuple::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class JTuple.
      TClass *R__cl = ::JTuple::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m", &m);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "px", &px);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "py", &py);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pz", &pz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "theta", &theta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cosTheta", &cosTheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "E", &E);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pt", &pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "p", &p);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mrec", &mrec);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chi2", &chi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "likelihood", &likelihood);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dr", &dr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eta", &eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "et", &et);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mt", &mt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "plus", &plus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "minus", &minus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mrecoil", &mrecoil);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "user", &user);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tag", &tag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id", &id);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_JTuple(void *p) {
      return  p ? new(p) ::JTuple : new ::JTuple;
   }
   static void *newArray_JTuple(Long_t nElements, void *p) {
      return p ? new(p) ::JTuple[nElements] : new ::JTuple[nElements];
   }
   // Wrapper around operator delete
   static void delete_JTuple(void *p) {
      delete ((::JTuple*)p);
   }
   static void deleteArray_JTuple(void *p) {
      delete [] ((::JTuple*)p);
   }
   static void destruct_JTuple(void *p) {
      typedef ::JTuple current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::JTuple

/********************************************************
* JTupleDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableJTupleDict();

extern "C" void G__set_cpp_environmentJTupleDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("../include/JTuple.hh");
  G__cpp_reset_tagtableJTupleDict();
}
#include <new>
extern "C" int G__cpp_dllrevJTupleDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* JTuple */
static int G__JTupleDict_169_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   JTuple* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new JTuple[n];
     } else {
       p = new((void*) gvp) JTuple[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new JTuple;
     } else {
       p = new((void*) gvp) JTuple;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__JTupleDictLN_JTuple));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JTupleDict_169_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const JTuple*) G__getstructoffset())->getLikelihood());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JTupleDict_169_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const JTuple*) G__getstructoffset())->getChi2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JTupleDict_169_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const JTuple*) G__getstructoffset())->getdR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JTupleDict_169_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const JTuple*) G__getstructoffset())->getTag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JTupleDict_169_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const JTuple*) G__getstructoffset())->getIndex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JTupleDict_169_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const JTuple*) G__getstructoffset())->getRecoilMass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JTupleDict_169_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const JTuple*) G__getstructoffset())->getUserVariable());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JTupleDict_169_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JTuple*) G__getstructoffset())->setLikelihood((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JTupleDict_169_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JTuple*) G__getstructoffset())->setChi2((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JTupleDict_169_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JTuple*) G__getstructoffset())->setdR((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JTupleDict_169_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JTuple*) G__getstructoffset())->setTag((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JTupleDict_169_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JTuple*) G__getstructoffset())->setIndex((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JTupleDict_169_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JTuple*) G__getstructoffset())->setRecoilMass((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JTupleDict_169_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JTuple*) G__getstructoffset())->setUserVariable((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JTupleDict_169_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) JTuple::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JTupleDict_169_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) JTuple::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JTupleDict_169_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) JTuple::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JTupleDict_169_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      JTuple::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JTupleDict_169_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JTuple*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JTupleDict_169_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) JTuple::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JTupleDict_169_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) JTuple::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JTupleDict_169_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) JTuple::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JTupleDict_169_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) JTuple::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__JTupleDict_169_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   JTuple* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new JTuple(*(JTuple*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__JTupleDictLN_JTuple));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef JTuple G__TJTuple;
static int G__JTupleDict_169_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (JTuple*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((JTuple*) (soff+(sizeof(JTuple)*i)))->~G__TJTuple();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (JTuple*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((JTuple*) (soff))->~G__TJTuple();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__JTupleDict_169_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   JTuple* dest = (JTuple*) G__getstructoffset();
   *dest = *(JTuple*) libp->para[0].ref;
   const JTuple& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* JTuple */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncJTupleDict {
 public:
  G__Sizep2memfuncJTupleDict(): p(&G__Sizep2memfuncJTupleDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncJTupleDict::*p)();
};

size_t G__get_sizep2memfuncJTupleDict()
{
  G__Sizep2memfuncJTupleDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceJTupleDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__JTupleDictLN_JTuple))) {
     JTuple *G__Lderived;
     G__Lderived=(JTuple*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__JTupleDictLN_JTuple),G__get_linked_tagnum(&G__JTupleDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableJTupleDict() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__JTupleDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__JTupleDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__JTupleDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__JTupleDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__JTupleDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__JTupleDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__JTupleDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__JTupleDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__JTupleDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__JTupleDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* JTuple */
static void G__setup_memvarJTuple(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__JTupleDictLN_JTuple));
   { JTuple *p; p=(JTuple*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"m=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"px=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"py=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"pz=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"theta=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"cosTheta=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"E=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"pt=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"p=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"mrec=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"chi2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"likelihood=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"dr=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"eta=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"et=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"mt=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"plus=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"minus=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"mrecoil=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"user=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"tag=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"id=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__JTupleDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarJTupleDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncJTuple(void) {
   /* JTuple */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__JTupleDictLN_JTuple));
   G__memfunc_setup("JTuple",596,G__JTupleDict_169_0_1, 105, G__get_linked_tagnum(&G__JTupleDictLN_JTuple), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getLikelihood",1348,G__JTupleDict_169_0_2, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getChi2",646,G__JTupleDict_169_0_3, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getdR",502,G__JTupleDict_169_0_4, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTag",604,G__JTupleDict_169_0_5, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getIndex",824,G__JTupleDict_169_0_6, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRecoilMass",1330,G__JTupleDict_169_0_7, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getUserVariable",1541,G__JTupleDict_169_0_8, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setLikelihood",1360,G__JTupleDict_169_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - _likelihood", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setChi2",658,G__JTupleDict_169_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - _chi2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setdR",514,G__JTupleDict_169_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - _dr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTag",616,G__JTupleDict_169_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - _tag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setIndex",836,G__JTupleDict_169_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - _id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRecoilMass",1342,G__JTupleDict_169_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - _mrecoil", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setUserVariable",1553,G__JTupleDict_169_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - _user", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__JTupleDict_169_0_16, 85, G__get_linked_tagnum(&G__JTupleDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&JTuple::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__JTupleDict_169_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&JTuple::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__JTupleDict_169_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&JTuple::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__JTupleDict_169_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&JTuple::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__JTupleDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__JTupleDict_169_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__JTupleDict_169_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&JTuple::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__JTupleDict_169_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&JTuple::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__JTupleDict_169_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&JTuple::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__JTupleDict_169_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&JTuple::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("JTuple", 596, G__JTupleDict_169_0_28, (int) ('i'), G__get_linked_tagnum(&G__JTupleDictLN_JTuple), -1, 0, 1, 1, 1, 0, "u 'JTuple' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~JTuple", 722, G__JTupleDict_169_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__JTupleDict_169_0_30, (int) ('u'), G__get_linked_tagnum(&G__JTupleDictLN_JTuple), -1, 1, 1, 1, 1, 0, "u 'JTuple' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncJTupleDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalJTupleDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcJTupleDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__JTupleDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__JTupleDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__JTupleDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__JTupleDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__JTupleDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__JTupleDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__JTupleDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__JTupleDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__JTupleDictLN_JTuple = { "JTuple" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableJTupleDict() {
  G__JTupleDictLN_TClass.tagnum = -1 ;
  G__JTupleDictLN_TBuffer.tagnum = -1 ;
  G__JTupleDictLN_TMemberInspector.tagnum = -1 ;
  G__JTupleDictLN_TObject.tagnum = -1 ;
  G__JTupleDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__JTupleDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__JTupleDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__JTupleDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__JTupleDictLN_JTuple.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableJTupleDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__JTupleDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__JTupleDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__JTupleDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__JTupleDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__JTupleDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__JTupleDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__JTupleDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__JTupleDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__JTupleDictLN_JTuple),sizeof(JTuple),-1,291072,(char*)NULL,G__setup_memvarJTuple,G__setup_memfuncJTuple);
}
extern "C" void G__cpp_setupJTupleDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupJTupleDict()");
  G__set_cpp_environmentJTupleDict();
  G__cpp_setup_tagtableJTupleDict();

  G__cpp_setup_inheritanceJTupleDict();

  G__cpp_setup_typetableJTupleDict();

  G__cpp_setup_memvarJTupleDict();

  G__cpp_setup_memfuncJTupleDict();
  G__cpp_setup_globalJTupleDict();
  G__cpp_setup_funcJTupleDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncJTupleDict();
  return;
}
class G__cpp_setup_initJTupleDict {
  public:
    G__cpp_setup_initJTupleDict() { G__add_setup_func("JTupleDict",(G__incsetup)(&G__cpp_setupJTupleDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initJTupleDict() { G__remove_setup_func("JTupleDict"); }
};
G__cpp_setup_initJTupleDict G__cpp_setup_initializerJTupleDict;

